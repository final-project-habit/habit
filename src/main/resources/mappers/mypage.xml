<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypage">

    <select id="getUserName" parameterType="String" resultType="java.util.Map">
        select user_name,user_img from user where user_id=#{user_id}
    </select>

    <select id="getMyEnergy" parameterType="String" resultType="Integer">
        select IFNULL(sum(energy_saveuse),0) from energy where user_id=#{user_id}
    </select>

    <select id="getMyReviewCount" parameterType="String" resultType="Integer">
        select count(*) from review where user_id=#{user_id} and review_status!='N'
    </select>

    <select id="getUserInfo" parameterType="String" resultType="com.habit.myPage.DTO.UserInfoDTO">
        select user_pw, user_name, user_email, user_phone,user_birth,user_img
        from user where user_id=#{user_id}
    </select>

    <select id="getPass" parameterType="String" resultType="String">
        select user_pw from user where user_id=#{user_id}
    </select>

    <update id="updatePass" parameterType="java.util.Map" >
        update user set user_pw=#{user_pw} where user_id=#{user_id}
    </update>

    <update id="updateUserInfo" parameterType="com.habit.myPage.DTO.UserInfoDTO">
        update user set user_name=#{user_name},user_email=#{user_email},user_birth=#{user_birth},user_phone=#{user_phone}
        <if test="user_img!=null">
            ,user_img=#{user_img}
        </if>
        where user_id=#{user_id}
    </update>

    <select id="getFromPayForOrder" parameterType="String" resultType="java.util.Map">
        select DATE_FORMAT(pay_date,'%Y년 %m월 %d일 %H시 %i분') as pay_date, p.pay_no as pay_no,count(*) as count
        from pay p join payd d on p.pay_no=d.pay_no
        where p.user_id=#{user_id}
        group by p.pay_no
        order by pay_date desc
    </select>

    <select id="getPayDForOrder" parameterType="String" resultType="com.habit.myPage.DTO.OrderAllDTO">
        select payd_no, pro_no, payd_qty,refn_status
        from payd
        where pay_no=#{pay_no};
    </select>

    <select id="getOneForOrder" parameterType="String" resultType="java.util.Map">
        select cont_name,cont_img,DATE_FORMAT(AA.one_date,'%m월 %d일, %H시 %i분') as op_name,c.cont_no as cont_no
        from(select cont_no,one_date from one where pro_no=#{pro_no})
            AA join cont c on AA.cont_no=c.cont_no
    </select>

    <select id="getProForOrder" parameterType="String" resultType="java.util.Map">
        select cont_name,cont_img,AA.prod_name as op_name,c.cont_no as cont_no
        from(select cont_no,prod_name from prod where pro_no=#{pro_no})
            AA join cont c on AA.cont_no=c.cont_no;
    </select>

    <select id="getPayDForOrderDetail" parameterType="String" resultType="com.habit.myPage.DTO.OrderDetailDTO">
        select payd_no, pro_no, payd_qty,refn_status,payd_price
        from payd
        where pay_no=#{pay_no};
    </select>

    <select id="getFromPayForOrderDetail" parameterType="String" resultType="java.util.Map">
        select DATE_FORMAT(pay_date,'%Y년 %m월 %d일 %H시 %i분') as pay_date,count(*) as count,pay_method,pay_point
        from pay p join payd d on p.pay_no=d.pay_no
        where p.pay_no=#{pay_no}
        order by pay_date desc
    </select>

    <select id="getRefnForOrderDetail" parameterType="Integer" resultType="com.habit.myPage.DTO.OrderRefnDTO">
        select refn_qty,refn_pay,refn_point,refn_method,payd_no
             ,DATE_FORMAT(refn_date,'%Y년 %m월 %d일 %H시 %i분') as refn_date
             ,IFNULL(prod_name,DATE_FORMAT(one_date,'%Y년 %m월 %d일 %H시 %i분')) as refnop_name
        from refn r left outer join prod p on r.pro_no = p.pro_no left outer join one o on r.pro_no = o.pro_no
        where payd_no=#{payd_no}
    </select>

    <select id="checkReviewWrite" parameterType="int" resultType="Integer">
        select count(*) from review where payd_no=#{payd_no} and review_status !="N";
    </select>

    <select id="getContInfo" parameterType="java.util.Map" resultType="com.habit.myPage.DTO.ReviewWriteDTO">
        select cont_name,cont_img,cont_no,op_name,DATE_FORMAT(payd_date,'%Y년 %m월 %d일 %H시 %i분') as payd_date,AA.payd_no as payd_no
        from(select pro_no,payd_date,payd_no from payd where payd_no=#{payd_no}) AA
        join (select c.cont_no,cont_img,cont_name,op_name,pro_no
                    from(select pro_no,prod_name as op_name ,cont_no from prod where pro_no=#{pro_no}
                         union
                          select pro_no,DATE_FORMAT(one_date,'%Y년 %m월 %d일 %H시 %i분')as op_name,cont_no from one where pro_no=#{pro_no})
             BB join cont c on BB.cont_no=c.cont_no)
        CC on AA.pro_no=CC.pro_no
    </select>

    <select id="getReview" parameterType="Integer" resultType="com.habit.myPage.DTO.ReviewWriteDTO">
        select review_img,review_star,review_cont,review_feed,review_ask from review where payd_no=#{payd_no}
    </select>

   <insert id="insertReview" parameterType="com.habit.myPage.DTO.ReviewInsertDTO">
        insert into review (user_id,cont_no, payd_no, review_cont, review_star, review_ask
        <if test="review_img!=null">
            ,review_img
        </if>
        <if test="review_feed!=null">
            , review_feed
        </if> )

       values (#{user_id},#{cont_no},#{payd_no},#{review_cont},#{review_star},#{review_ask}
       <if test="review_img!=null">
             ,
            <foreach collection="review_img" item="img" open="'" close="'" separator="|" >${img}</foreach>
        </if>
        <if test="review_feed!=null">
            ,#{review_feed}
        </if>
        )
    </insert>

    <insert id="insertEnergy" parameterType="com.habit.myPage.DTO.EnergyDTO">
        insert into energy(user_id, energy_saveuse,  energy_sources)
        values(#{user_id},#{energy_saveuse},#{energy_sources})
    </insert>

    <update id="updateReview" parameterType="com.habit.myPage.DTO.ReviewInsertDTO">
        update review set review_cont=#{review_cont}, review_star=#{review_star},review_ask=#{review_ask}
                        <if test="review_img!=null">
                            ,review_img=
                            <foreach collection="review_img" item="img" open="'" close="'" separator="|" >${img}</foreach>
                        </if>
                        <if test="review_feed!=null">
                            ,review_feed=#{review_feed}
                        </if>
        where payd_no= #{payd_no}
    </update>

    <select id="getInfoForRefund" parameterType="Integer" resultType="com.habit.myPage.DTO.RefundInfoDTO">
        select DD.*, c.cont_img,c.cont_name
        from(select CC.*,p.pay_method,p.pay_point
             from(select AA.pro_no as pro_no, op_name,cont_no,pay_no,payd_price,payd_qty,DATE_FORMAT(payd_date,'%Y년 %m월 %d일 %H시 %i분') as payd_date,payd_no
                  from(select pro_no,prod_name as op_name ,cont_no from prod
                       union
                       select pro_no,DATE_FORMAT(one_date,'%Y년 %m월 %d일 %H시 %i분')as op_name,cont_no from one ) AA join
                          (select p.pay_no,pro_no,payd_price,payd_qty,payd_date,payd_no from payd p
                           join pay p2 on p.pay_no =p2.pay_no where payd_no=#{payd_no} )BB on AA.pro_no=BB.pro_no) CC join pay p on CC.pay_no=p.pay_no) DD join cont c on DD.cont_no=c.cont_no;

    </select>

    <select id="getCheckForEnergyRefund" parameterType="String" resultType="Integer">
        select count(*) from payd where pay_no=#{pay_no} and refn_status='RO'
    </select>

    <insert id="insertRefund" parameterType="com.habit.myPage.DTO.RefundInsertDTO" >
        insert into refn (payd_no, user_id, pro_no,refn_qty,refn_point,refn_pay ,refn_method)
        values (#{payd_no},#{user_id},#{pro_no},#{refn_qty},#{refn_point},#{refn_price},#{pay_method})
    </insert>

    <update id="changeStatusPayd" parameterType="Integer" >
        update payd set payd_status='C' , refn_status='CFRO' where payd_no=#{payd_no}
    </update>

    <insert id="insertEnergyRefund" parameterType="com.habit.myPage.DTO.EnergyDTO">
        insert into energy(user_id, energy_saveuse,  energy_sources)
        values(#{user_id},#{energy_saveuse},#{energy_sources})
    </insert>

    <select id="getUserGrade" parameterType="String" resultType="String">
        select user_level from user where user_id=#{user_id}
    </select>

    <select id="getResultRefund" parameterType="Integer" resultType="com.habit.myPage.DTO.RefundResultDTO">
        select DD.refn_pay,DD.refn_qty,DD.refn_point,DD.pay_method,DD.refn_date,DD.op_name, c.cont_img,c.cont_name
        from(select CC.*,p.pay_method
             from(select AA.pro_no as pro_no, op_name,cont_no,pay_no,refn_pay,refn_qty,refn_point,DATE_FORMAT(refn_date,'%Y년 %m월 %d일 %H시 %i분') as refn_date
                  from(select pro_no,prod_name as op_name ,cont_no from prod
                       union
                       select pro_no,DATE_FORMAT(one_date,'%Y년 %m월 %d일 %H시 %i분')as op_name,cont_no from one )
                       AA join
                      (select p.pay_no,p.pro_no,refn_pay,refn_qty,refn_date,refn_point from payd p
                       join refn p2 on p.payd_no =p2.payd_no where p2.payd_no=#{payd_no} )BB on AA.pro_no=BB.pro_no) CC join pay p on CC.pay_no=p.pay_no) DD join cont c on DD.cont_no=c.cont_no;


    </select>
</mapper>