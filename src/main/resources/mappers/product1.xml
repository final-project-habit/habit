<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- product.xml -->
<mapper namespace="product1">
    <!-- 대분류 전체 select -->
    <select id="cateListLage" resultType="java.util.Map">
        SELECT cate_large
        FROM habit.cate
        GROUP BY cate_large
    </select>

    <!-- 대분류에 따른 중분류 select -->
    <select id="cateListMiddle" parameterType="String" resultType="java.util.Map">
        SELECT cate_middle
        FROM habit.cate
        WHERE cate_large = #{cate_large}
    </select>

    <!-- 해당 카테고리의 cate_no 가져오기 -->
    <select id="selectCateNo" parameterType="String" resultType="String">
        SELECT cate_no
        FROM habit.cate
        WHERE cate_middle = #{cate_middle}
    </select>

    <!-- 콘텐츠 테이블 insert -->
    <insert id="insertCont" useGeneratedKeys="true" keyProperty="cont_no" parameterType="com.habit.host1.DTO.RequestContentInsertDTO" >
        INSERT INTO cont (cate_no, host_id, cont_name, cont_zip, cont_addr1, cont_addr2, cont_extaddr, cont_endate, cont_img, cont_content, cont_hashtag1, cont_hashtag2, cont_hashtag3, cont_hashtag4, cont_hashtag5)
        values (#{cate_no}, #{host_id}, #{cont_name}, #{cont_zip}, #{cont_addr1}, #{cont_addr2}, #{cont_extaddr}, #{cont_endate},
                <foreach collection="cont_img" item="img" open="'" close="'" separator="|">${img}</foreach>
                , #{cont_content}, #{cont_hashtag1},
                <foreach collection="cont_hashtag2" item="hashtag2" open="'" close="'" separator="|">${hashtag2}</foreach>
                , #{cont_hashtag3},
                <foreach collection="cont_hashtag4" item="hashtag4" open="'" close="'" separator="|">${hashtag4}</foreach>
                , #{cont_hashtag5})
        <selectKey keyProperty="cont_no" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- 원데이 클래스 테이블 insert -->
    <insert id="insertOne" parameterType="com.habit.host1.DTO.RequestContentInsertDTO">
        insert into one(pro_no, cont_no, one_date, one_maxqty, one_price)
        values
        <foreach collection="list" item="oneEntity" separator=",">
            (concat('o_no',nextval(habit.sq_one)), #{oneEntity.cont_no}, #{oneEntity.one_date}, #{oneEntity.one_maxqty}, #{oneEntity.one_price})
        </foreach>
    </insert>

    <!-- 회차권/인원권 테이블 insert -->
    <insert id="insertProd" parameterType="com.habit.host1.DTO.RequestContentInsertDTO">
        insert into prod(pro_no, cont_no, prod_name, prod_qty, prod_price)
        values
        <foreach collection="list" item="prodEntity" separator=",">
            (concat('p_no',nextval(habit.sq_prod)), #{prodEntity.cont_no}, #{prodEntity.prod_name}, #{prodEntity.prod_qty}, #{prodEntity.prod_price})
        </foreach>
    </insert>

    <!-- 리뷰 리스트 불러오기 -->
    <select id="reviewList" parameterType="com.habit.host1.DTO.RequestReviewDTO" resultType="com.habit.host1.DTO.ResponseReviewDTO">
        select user_id, cont_name, review_star, review_cont, review_date
        from habit.review a join habit.cont b
        on a.cont_no = b.cont_no
        where host_id = #{host_id} and review_status = 'Y'
        <if test="starScore != null">
        and <foreach collection="starScore" item="score" separator="or" open="(" close=")">review_star = ${score}</foreach>
        </if>
        <if test='!reviewContKeyword.equals("")'>and review_cont like concat('%',#{reviewContKeyword},'%')</if>
        <if test='!searchUserId.equals("")'>and user_id = #{searchUserId}</if>
        order by review_date desc
        limit ${recordSize} offset ${(page-1)*recordSize}
    </select>

    <!-- 검색 페이지 count(*)-->
    <select id="reviewCount" parameterType="com.habit.host1.DTO.RequestReviewDTO" resultType="int">
        select count(*)
        from habit.review a join habit.cont b
        on a.cont_no = b.cont_no
        where host_id = #{host_id} and review_status = 'Y'
        <if test="starScore != null">
        and <foreach collection="starScore" item="score" separator="or" open="(" close=")">review_star = ${score}</foreach>
        </if>
        <if test='!reviewContKeyword.equals("")'>and review_cont like concat('%',#{reviewContKeyword},'%')</if>
        <if test='!searchUserId.equals("")'>and user_id = #{searchUserId}</if>
    </select>
</mapper>